/*48.旋转图像

给定一个 n × n 的二维矩阵表示一个图像。
将图像顺时针旋转 90 度。
说明：
你必须在原地旋转图像，这意味着你需要直接修改输入的二维矩阵。请不要使用另一个矩阵来旋转图像。

示例 1:
给定 matrix = 
[
  [1,2,3],
  [4,5,6],
  [7,8,9]
],

原地旋转输入矩阵，使其变为:
[
  [7,4,1],
  [8,5,2],
  [9,6,3]
]

示例 2:
给定 matrix =
[
  [ 5, 1, 9,11],
  [ 2, 4, 8,10],
  [13, 3, 6, 7],
  [15,14,12,16]
], 

原地旋转输入矩阵，使其变为:
[
  [15,13, 2, 5],
  [14, 3, 4, 1],
  [12, 6, 8, 9],
  [16, 7,10,11]
]
*/

/*找规律题
从第0行开始先将第i行与倒数第i行的元素逐个对换
然后从第0列开始对下三角区域的每个元素和其对称的元素进行对换
*/

class Solution {
public:
    void rotate(vector<vector<int>>& matrix) 
    {
        int len = matrix.size();
        int i, j;
        for(i = 0; i < len / 2; i++)
            for(j = 0; j < len; j++)
            {
                std::swap(matrix[0 + i][j], matrix[len - 1 - i][j]);
            }
        for(j = 0; j < len - 1; j++)
        {
            for(i = j + 1; i < len; i++)
            {
                std::swap(matrix[i][j], matrix[j][i]);
            }
        }
    }
};
